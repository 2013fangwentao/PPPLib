# Precise Point Positioning Library(PPPLib) configure file

# NOTE: THIS CONFIGURATION FILE CAN BE USED TO PERFORM GNSS/INS LOOSELY COUPLED

# [option name]:                    [option value]              :[comment]

# file option------------------------- ------------------------------------
use_custom_dir;             1;                                  ;(int) 1 use your specified folder, all need file in same dir, 0 store files in a certain pattern,convenient to batch process
prc_date;                   2019,03,28                          ;
data_dir;                   /home/cc/dataset/data_lc_sim;    ;(string) specific folder [essential]
site_name;                                                      ;(4string) specified site name, then match the corresponding file, [option]
filter_type;                0                                   ;(int) 0 forward 1 backward 2 combined
sim_trj;                    /home/cc/dataset/data_lc_sim/Profile_1.csv;
rslt;                       /home/cc/dataset/data_lc_sim/sim_lc.pos;

# gnss option--------------------------------------------------------------
ele_min;                    15                                  ;(double) ele cut-off angle(deg) [default]
frq_opt;                    1                                  ;(int) used frequency number; 0 FRQ_SINGLE 1 FRQ_DUAL 2 FRQ_TRIPLE 
gps_frq;                    0,1,2                              ;(int) specified the used frequency order, to GPS L1,L2,L5,        0 GPS_L1  1 GPS_L2  3 GPS_L5
bds_frq;                    0,1,2                              ;(int) specified the used frequency order, to BD2 B1,B2,B3,        0 BD2_B1I 1 BD2_B2I 2 BD2_B3I
gal_frq;                    0,1,2                              ;(int) specified the used frequency order, to GAL E1,E5a,E5b       0 GAL_E1  1 GAL_E5a 2 GAL_E5b
glo_frq;                    0,1                                ;(int) specified the used frequency order, to GLO G1,G2            0 GLO_G1  1 GLO_G2
qzs_frq;                    0,1,2                              ;(int) specified the used frequency order, to QZS L1,L2,L5         0 QZS_L1  1 QZS_L2  2 QZS_L5
bd3_frq;                    0,2,3                              ;(int) specified the used frequency order, to BD3 B1I,B3I,B1C,B2a, 0 BD3_B1I 2 BD3_B3I 3 BD3_B1C, 4 BD3_B2a, 5 BD3_B2b
adj_obs;                    0                                  ;(int) adjust observation,due to some  high priority observables missing
use_doppler;                0                                  ;(int) used doppler to estimate velocity in SPP
code_phase_ratio;           100.0                              ;(double)
meas_err_factor;            0,0.003,0.003                      ;(double)
ac_opt;                     0                                  ;(int) GNSS product ACs, 0 brdc,1 wum, 2 gbm, 3 com
eph_opt;                    0                                  ;(int) ephemeris option, 0 broadcast, 1 precise
ion_opt;                    0                                  ;(int) ionosphere option, 0 off, 1 klobular 2 tec correction 3 ion-free 4 ion-free2 5 ion-est 6 ion-constraint
trp_opt;                    0                                  ;(int) troposphere option, 0 off, 1 saas, 2 est-wet, 3 est-grad
tid_opt;                    0                                  ;(int) tide correction, 0 off 1 on
glo_ifcb_opt;               0                                  ;(int) glonass inter-frequency code bias modeling 0 off 1 linear 2 quad 3 1-sat 4 1-frq
sat_pcv;                    0                                  ;(int) 0 off 1 on
rec_ant;                    0                                  ;(int) 0 off 1 on
cs_thres;                   5.0,0.15                           ;(double) cycle slip thresthold mw/gf
max_pdop;                   30.0                               ;(double) max pdop value to reject SPP solution
max_prior;                  30.0                               ;(double) max a-prior residual to reject observables
max_inno;                   30.0                               ;
max_out;                    20                                 ;(int)
ait_psd;                    0.0,10E-3,10E-8                    ;(double) ambiguity/ionosphere/troposphere psd
check_dual_phase;           0                                  ;(int) only used satellite if dual-frequency observable exist
ar_mode;                    1                                  ;(int) ar option 0 off, 1 cont
glo_ar_mode;                0                                  ;(int)
bds_ar_mode;                0                                  ;(int)
ar_thres;                   3.0,0.25,0,1E-9,1E-5;              ;(double)
ar_el_mask;                 10.0                               ;(double)
min_sat_num2fix;            4                                  ;(int) min satellite number to fix ambiguity
min_sat_num2drop;           10                                 ;(int) min satellite number to drop bad satellite in AR
min_lock2fix;               5                                  ;(int)
partial_ar;                 1                                  ;(int)
res_qc;                     1                                  ;(int)
base_coord;                 1,0,0,0 ;0 enu 1 ecef

# ins  option-------------------------------------------------------------------------
imu_type;                   6                                  ;(int) imu type 0: IMU_UNKNOW 1: IMU_NOVTEL_CPT 2: IMU_NOVTEL_A1 3: IMU_M39 4: IMU_MTI_CSV 5: IMU_SIM_AIVA, 6: IMU_SIM_TACTICAL 7: IMU_SIM_MEMS
coord_type;                 1                                  ;(int) imu coordination type 0: IMU_COORD_RFU 1: IMU_COORD_FRD
data_format;                1                                  ;(int) imu data format 0: IMU_FORMAT_INCR 1: IMU_FORMAT_RATE
gyro_val_format;            1                                  ;(int) imu gyro value format 0: GYRO_FORMAT_DEG 1: GYRO_FORMAT_RAD
sample_hz;                  100.0                              ;(double) imu sample rate(hz)
sample_number;              1                                  ;(int) 0: no correct 1: single sample+previous sample 2~5: multi-sample algorithm
dttol;                      0.1                                ;(double) ins-gnss time alignment limit
mech_coord;                 0                                  ;(int) 0: ecef 1:enu
ins_align;                  0                                  ;(int) 0: setting 1: gnss sol(pos and vel) 2: use raw gnss obs
init_pos;                   0,0,0                              ;init pos for ins align, lat lon hgt(rad, rad, m) for align
init_vel;                   0,0,0                              ;init vel for ins align, enu(m/s)
init_rpy;                   0,0,0                              ;init att for ins align, rpy(rad)
lever;                      0.0,-0.0,-0.0                      ;(double) lever 0.383,-0.163,-0.940
est_sa;                     0                                  ;(bool)
est_sg;                     0                                  ;(bool)
est_ra;                     0                                  ;(bool)
est_rg;                     0                                  ;(bool)
est_level;                  0                                  ;(bool)
init_pos_err;               4,2,3                              ;positioning initialization error in ned (m)
init_vel_err;               0.05,-0.05,0.1                     ;velocity initialization error in ned (m/s)
init_att_err;               -0.05,0.04,1.0                     ;misalignment angles in ned(deg)
init_pos_unc;               1,1,3                              ;initial positioning uncertainty (m)
init_vel_unc;               0.1,0.1,0.1                        ;initial velocity uncertainty (m/s)
init_att_unc;               1.0,1.0,1.0                        ;initial attitude uncertainty (deg)
init_bg_unc;                10.0,10.0,10.0                     ;gyro bias error (deg/h)
init_ba_unc;                1000.0,1000.0,1000.0               ;acce bias error (ug)
clp_pos;                    1                                  ;(int) close loop position
clp_vel;                    1                                  ;(int) close loop velocity
clp_att;                    1                                  ;(int) close loop attitude
clp_ba;                     1                                  ;(int) close loop acce bias
clp_bg;                     1                                  ;(int) close loop gyro bias
clp_fact;                   1                                  ;(double) partial feedback
psd_ang_rw;                 0.02                               ;angular random walk (deg/sqrt(h))  ==> rad/s^0.5  ==> rad^2/s
psd_vel_rw;                 200.0                              ;velocity random walk (ug/sqrt(Hz)) ==> m/s^1.5    ==> m^2/s^3
psd_ba;                     0                                  ;acce bias random walk PSD ()
psd_bg;                     0                                  ;gyro bias random walk PSD (rad^2 s^-3) gyro drift
correction_time_ba;         180                                ;
correction_time_bg;         180                                ;
gyro_bias;                  0.03                               ;gyro constant bias (deg/h)         ==> rad/s      ==> rad^2/s^2 for sim
acce_bias;                  100.0                              ;acce constant bias (ug)            ==> m/s^2      ==> m^2/s^4   for sim

# sol_fmt ==> 0: solution organizes in a custom format, you can parse and plot solution using python script in /tools
# sol_fmt ==> 1: solution organizes as same as rtklib, you can plot solution using rtkplot
# out_err_fmt ==> 1: out error solution in ENU respect to true value
# sol  option ------------------------------------------------------------------------
out_sol;                    1                                  ;(int)
sol_fmt;                    1                                  ;(int)
sol_coord;                  2                                  ;(int)
out_head;                   1                                  ;(int)
out_vel;                    1                                  ;(int)
out_att;                    1                                  ;(int)
out_ba;                     1                                  ;(int)
out_bg;                     1                                  ;(int)
out_stat;                   1                                  ;(int)
out_err_fmt;                1                                  ;(int)
out_ins_mech_frq;           100                                ;(double)

